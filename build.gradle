plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.4'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'org.asciidoctor.jvm.convert' version '3.3.2' //rest docs
	id 'jacoco'
}

group = 'com.capstone'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	asciidoctorExt
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	//for UnivCert
	maven{url 'https://jitpack.io'}
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	//database
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'com.mysql:mysql-connector-j'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	//rest docs
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
	asciidoctorExt 'org.springframework.restdocs:spring-restdocs-asciidoctor'

	//UnivCert
	implementation 'com.github.in-seo:univcert:master-SNAPSHOT'

	//JWT
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	//object storage
	implementation platform('software.amazon.awssdk:bom:2.27.21')
	implementation 'software.amazon.awssdk:s3'
	implementation 'software.amazon.awssdk:url-connection-client'
}

// 1) 테스트에서 스니펫이 build/generated-snippets 에 생성되도록
def snippetsDir = layout.buildDirectory.dir("generated-snippets").get().asFile

tasks.named('test') {
	outputs.dir snippetsDir
}

// 2) AsciidoctorTask 설정 – test → docs 변환 순서 보장
asciidoctor {
// 1) 테스트 → 스니펫 생성 → Asciidoctor 순서 보장
	dependsOn tasks.named('test')
	configurations 'asciidoctorExt'

	// 2) 스니펫 입력 폴더를 증분 빌드용으로 등록
	inputs.dir snippetsDir

	// 3) {snippets} 속성에 'C:/.../build/generated-snippets' 형태의 문자열로 바인딩
	attributes 'snippets': snippetsDir
			.absolutePath                    // 절대 경로로
			.replace('\\', '/')             // Windows 백슬래시 제거
			.replaceAll(/ /, '\\ ')         // (선택) 공백이 있으면 이스케이프

	// 4) 문서 변환 대상 .adoc 지정 (보통 index.adoc)
	sources {
		include 'index.adoc'
	}

	// 5) (선택) 출력 경로 명시
	outputDir = layout.buildDirectory
			.dir("docs/asciidoc")
			.get()
			.asFile
}

tasks.named('bootJar') {
	dependsOn tasks.named('asciidoctor')
	from(layout.buildDirectory.dir('docs/asciidoc')) {
		into 'static/docs'
	}
}

tasks.register('copyDocsToSrc', Copy) {
	dependsOn asciidoctor
	from layout.buildDirectory.dir('docs/asciidoc')
	into file('src/docs')
}

tasks.named('assemble') {
	finalizedBy 'copyDocsToSrc'
}

tasks.named('test', Test) {
	useJUnitPlatform()
	outputs.dir layout.buildDirectory.dir("generated-snippets")
}

jacoco {
	toolVersion = "0.8.11"
}

tasks.named('jacocoTestReport', JacocoReport) {
	dependsOn tasks.named('test')
	reports {
		html.required.set(true)
		xml.required.set(true)
	}
	sourceDirectories.setFrom files('src/main/java')
	classDirectories.setFrom(
			files(layout.buildDirectory.dir('classes/java/main'))
					.asFileTree
					.matching { exclude '**/config/**', '**/common/**', '**/dto/**', '**/domain/**', '**/filter/**' }
	)
	def jacocoDir = layout.buildDirectory.dir('jacoco').get().asFile
	executionData.setFrom fileTree(dir: jacocoDir, include: ['*.exec'])
}

tasks.register('copyJacocoReportsToDocs', Copy) {
	dependsOn tasks.named('jacocoTestReport')
	from layout.buildDirectory.dir('reports/jacoco/test/html')
	into file('src/docs/jacoco')
}

tasks.named('assemble') {
	finalizedBy 'copyDocsToSrc', 'copyJacocoReportsToDocs'
}

// check 태스크에 커버리지 검증 포함
tasks.named('check') {
	dependsOn tasks.named('jacocoTestCoverageVerification')
}