name: Java CI with Gradle

on:
  push:
    branches:
      - main
      - dev
      - test/ci-cd

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21

      - name: Grant execute permission for Gradle wrapper
        run: chmod +x ./gradlew

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Create dummy Firebase JSON for tests
        run: |
          mkdir -p src/main/resources/firebase
          echo '{}' > src/main/resources/firebase/rentit-5b36b-firebase-adminsdk-fbsvc-ab4f4216ef.json

      - name: Run tests
        run: ./gradlew clean test -Dspring.profiles.active=test

      - name: Prepare production config
        run: |
          mkdir -p src/main/resources/firebase
          echo "${{ secrets.APPLICATION }}" > src/main/resources/application.yml
          echo "${{ secrets.FCM_JSON }}"  > src/main/resources/firebase/rentit-5b36b-firebase-adminsdk-fbsvc-ab4f4216ef.json

      - name: Build JAR (skip tests)
        run: ./gradlew bootJar -x test

      - name: Build & push Docker image
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" \
            | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
          docker build --no-cache -t "${{ secrets.DOCKER_REPO }}:latest" .
          docker push "${{ secrets.DOCKER_REPO }}:latest"

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Deploy to server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          password: ${{ secrets.SERVER_PASSWORD }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            docker pull "${{ secrets.DOCKER_REPO }}:latest"
            docker stop rentit || true
            docker rm   rentit || true
            docker run -d \
              --name rentit \
              -p 8080:8080 \
              "${{ secrets.DOCKER_REPO }}:latest"
